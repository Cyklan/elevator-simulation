{"version":3,"sources":["App/Elevator/Shaft/Cabin.tsx","App/Elevator/Shaft.tsx","App/Elevator/Direction.ts","App/Elevator.tsx","App/App.tsx","index.tsx"],"names":["Cabin","floor","cabinPosition","transform","className","id","style","Shaft","Direction","idle","direction","useState","setFloor","useEffect","movementLoop","setInterval","setTimeout","Elevator","Down","App","elevatorCount","elevators","i","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAiBeA,MAVf,YAAqC,IAArBC,EAAoB,EAApBA,MAERC,EAAgB,CACpBC,UAAU,cAAD,OAAwB,GAARF,EAAhB,SAGX,OAAO,qBAAKG,UAAU,QAAQC,GAAG,QAAQC,MAAOJ,K,MCuBnCK,ICpCHC,EDoCGD,EAzBf,YAAgD,EAA/BE,KAA+B,EAAzBC,UAA0B,IAAD,EAEpBC,mBAAS,GAFW,mBAEvCV,EAFuC,KAEhCW,EAFgC,KAI9CC,qBAAU,WACRC,IACAC,aAAY,WACVD,MACC,QACF,IAEH,IAAMA,EAAe,WACnBE,YAAW,kBAAMJ,EAAS,KAAI,KAC9BI,YAAW,kBAAMJ,EAAS,KAAI,KAC9BI,YAAW,kBAAMJ,EAAS,KAAI,KAC9BI,YAAW,kBAAMJ,EAAS,KAAI,OAGhC,OACE,qBAAKR,UAAU,QAAf,SACI,cAAC,EAAD,CAAOH,MAAOA,Q,SC/BVO,O,WAAAA,I,gBAAAA,M,KCcGS,MAVf,WAAqB,IAAD,EAEQN,oBAAS,GAFjB,mBAETF,EAFS,aAGkBE,mBAASH,EAAUU,OAHrC,mBAGTR,EAHS,KAKhB,OALgB,KAMZ,cAAC,EAAD,CAAOD,KAAMA,EAAMC,UAAWA,KCUvBS,MAhBf,WAKE,IALc,IAAD,EAE6BR,mBAAS,GAFtC,mBAENS,EAFM,KAIPC,GAJO,KAIK,IACTC,EAAI,EAAGA,EAAIF,EAAeE,IACjCD,EAAUE,KAAK,cAAC,EAAD,KAGjB,OACE,qBAAKnB,UAAU,MAAf,SACGiB,KCVPG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.90065e83.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Cabin/Cabin.css\";\n\ntype CabinProps = {\n    floor: number\n}\n\nfunction Cabin({floor}: CabinProps) {\n  \n  const cabinPosition = {\n    transform: `translateY(${floor * 13}rem)`,\n  };\n\n  return <div className=\"cabin\" id=\"cabin\" style={cabinPosition}>\n  </div>;\n}\n\nexport default Cabin;\n","import React, { useEffect, useState } from \"react\";\nimport { moveMessagePortToContext } from \"worker_threads\";\nimport { Direction } from \"./Direction\";\nimport Cabin from \"./Shaft/Cabin\";\nimport \"./Shaft/Shaft.css\";\n\ntype ShaftProps = {\n  idle: boolean;\n  direction: Direction;\n};\n\nfunction Shaft({ idle, direction }: ShaftProps) {\n\n  const [floor, setFloor] = useState(0)\n\n  useEffect(() => {\n    movementLoop()\n    setInterval(() => {\n      movementLoop()\n    }, 12000)\n  }, [])\n\n  const movementLoop = () => {\n    setTimeout(() => setFloor(1), 3000)\n    setTimeout(() => setFloor(2), 6000)\n    setTimeout(() => setFloor(1), 9000)\n    setTimeout(() => setFloor(0), 12000)\n  }\n\n  return (\n    <div className=\"shaft\">\n        <Cabin floor={floor}/>\n    </div>\n  );\n}\n\nexport default Shaft;\n","export enum Direction {\n    Up,\n    Down\n}","import React, {Fragment, useState} from \"react\"\nimport Shaft from \"./Elevator/Shaft\"\nimport { Direction } from \"./Elevator/Direction\"\n\nfunction Elevator() {\n\n    const [idle, setIdle] = useState(true)\n    const [direction, setDirection] = useState(Direction.Down)\n    \n    return (\n        <Shaft idle={idle} direction={direction} />\n    )\n}\n\nexport default Elevator","import React, {useState} from 'react';\nimport './App.css';\nimport Elevator from \"./Elevator\"\n\nfunction App() {\n  \n  const [elevatorCount, setElevatorCount] = useState(1)\n  \n  const elevators = []\n  for (let i = 0; i < elevatorCount; i++) {\n    elevators.push(<Elevator />)\n  }\n\n  return (\n    <div className=\"App\">\n      {elevators}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}